<!--  ******************************************************************************* -->
<!--  * libpomdp                                                                      -->
<!--  * ========                                                                      -->
<!--  * File: build.xml                                                               -->
<!--  * Description:                                                                  -->
<!--  * Copyright (c) 2008, 2010 Diego Maniloff                                       -->
<!--  * W3: http://www.cs.uic.edu/~dmanilof                                           -->
<!--  ******************************************************************************* -->

<project name="libpomdp" default="dist">
    <description>
        build file
    </description>

  <!-- set global properties for this build -->
  <property name="src"     location="src/java"/>
  <property name="build"   location="build"/>
  <property name="dist"    location="dist"/>
  <property name="lib"     location="lib"/>

<!-- external libraries classpath 
-->
  <path id="classpath">
   <fileset dir="lib" />
   <fileset dir="/usr/share/java/" />
	<fileset dir="."      />
  </path>

  <!-- default excludes -->
  <defaultexcludes add="**/bak/*"/>
  <defaultexcludes add=".git/**"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>
  
  <target name="grammars">
    <!-- ANTRL is called with a java task, this should be changed to use antlr  -->
    <java classname="org.antlr.Tool" classpathref="classpath">
	<arg value="${src}/libpomdp/parser/java/DotPomdp.g"/>	
    </java>
    <java classname="org.antlr.Tool" classpathref="classpath">
	<arg value="${src}/libpomdp/parser/java/DotAlpha.g"/>	
    </java>
  </target>

  <target name="BPVItest">
    <java classname="libpomdp.test.BPVItest" classpathref="classpath">
    </java>
  </target>

  
  <target name="compile" depends="init"
	  description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpathref="classpath"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
