libpomdp-ma
========

ATENTION: This is Mauricio Araya's Fork, not the original Maniloff's libpomdp

libpomdp-ma (or libPOMDP) is an implementation of Partially Observable Markov 
Decision Process (POMDP) algorithms. The idea is to use the existing code
from other POMDP solvers, such as the following:
* Perseus (Spaan)
* Symbolic Perseus (Poupart)
* Original libpomdp (Maniloff)

Up to now, libPOMDP has the following dependencies ...

* jmatharray.jar from [3], 
* the Universal Java Matrix Package [8],
* matrix-toolkits-java [9].
* antlr3

Directories and files
=====================

README           - this file
lib/             - external libraries
src/             - java, matlab and python code 
data/	 			  - problem files and attic

Implemented algorithms
======================

Documentation
=============


References
==========
[1] Spaan, M. T.J, and N. Vlassis. "Perseus: Randomized point-based
value iteration for POMDPs." Journal of Artificial Intelligence
Research 24 (2005): 195-220.

[2] Ross, S., J. Pineau, S. Paquet, and B. Chaib-draa. "Online
planning algorithms for POMDPs." Journal of Artificial Intelligence
Research 32 (2008): 663-704.

[3] jmatharray: http://jmathtools.berlios.de

[4] Hansen, Eric A. "Solving POMDPs by Searching in Policy Space"
(1998): 211-219.

[5] Poupart, Pascal. "Exploiting structure to efficiently solve large
scale partially observable markov decision processes." University of
Toronto, 2005.

[6] Milos Hauskrecht, "Value-function approximations for partially
observable Markov decision processes." Journal of Artificial
Intelligence Research (2000).

[7] T. Smith and R. Simmons, "Heuristic search value iteration for
POMDPs." in Proceedings of the 20th conference on Uncertainty in
artificial intelligence, 2004, 520-527.

[8] Universal Java Matrix Package, http://www.ujmp.org/

[8] matrix-toolkits-java, http://code.google.com/p/matrix-toolkits-java/
